{
  "templateName": "Dynamic Dating Sim Tracker (Bottom of Message)",
  "templateAuthor": "Prolix OCs - Dynamic Fields Mod",
  "templatePosition": "BOTTOM",
  "htmlTemplate": "<!-- TEMPLATE NAME: Dynamic Dating Sim Tracker -->\n<!-- AUTHOR: Prolix OCs - Dynamic Fields Mod -->\n<!-- POSITION: BOTTOM -->\n\n<!-- CARD_TEMPLATE_START -->\n<style>\n/* Base styles for the card */\n.tracker-card {\n  min-width: 320px;\n  border-radius: 16px;\n  padding: 0;\n  box-sizing: border-box;\n  position: relative;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 500;\n  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1) !important;\n  backdrop-filter: blur(12px) !important;\n  border: 1px solid rgba(255, 255, 255, 0.08) !important;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2), 0 1px 4px rgba(0, 0, 0, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.05) !important;\n}\n\n/* Apply opacity if inactive */\n.tracker-card.inactive {\n  opacity: 0.6;\n}\n\n/* Gradient overlay at the top */\n.gradient-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent) !important;\n}\n\n/* Header section */\n.tracker-card-header {\n  padding: 16px 20px 0 20px;\n  font-size: 12px;\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n}\n\n/* Header row for date and counters */\n.header-row-top {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 8px;\n}\n\n/* Header badge style */\n.header-badge {\n  padding: 4px 10px;\n  border-radius: 8px;\n  font-weight: 500;\n  letter-spacing: 0.25px;\n  background: rgba(0, 0, 0, 0.2) !important;\n  border: 1px solid rgba(255, 255, 255, 0.08) !important;\n  backdrop-filter: blur(8px) !important;\n}\n\n/* Header row for character name and icons */\n.header-row-middle {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  margin-bottom: 4px;\n}\n\n.character-name {\n  font-size: 26px;\n  font-weight: 600;\n  letter-spacing: -0.25px;\n  text-align: left;\n}\n\n.icon-container {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  font-size: 20px;\n  flex-shrink: 0;\n}\n\n/* Header row for character status */\n.header-row-bottom {\n  display: flex;\n  justify-content: flex-start;\n  width: 100%;\n  margin-bottom: 12px;\n}\n\n.character-status {\n  display: flex;\n  align-items: center;\n  font-size: 12px !important;\n  font-weight: 500 !important;\n  color: rgba(255, 255, 255, 0.7) !important;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3) !important;\n  letter-spacing: 0.25px !important;\n}\n\n.status-divider {\n  margin: 0 8px !important;\n  opacity: 0.5 !important;\n}\n\n/* Stats container - dynamic layout */\n.stats-container {\n  position: absolute;\n  top: 115px;\n  bottom: 110px;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 12px;\n  gap: 8px;\n  flex-wrap: wrap; /* Allow wrapping for many fields */\n}\n\n/* Individual stat item */\n.stat-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  min-width: 60px;\n  max-width: 120px;\n  position: relative;\n}\n\n.stat-title {\n  font-size: 8px;\n  font-weight: 500;\n  opacity: 0.8;\n  margin-bottom: 3px;\n  color: rgba(255, 255, 255, 0.9);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n  text-align: center;\n  line-height: 1.2;\n}\n\n.stat-container {\n  padding: 6px 3px;\n  border-radius: 10px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  min-height: 70px;\n  justify-content: center;\n  box-sizing: border-box;\n  transition: all 0.25s cubic-bezier(0.25, 0.8, 0.25, 1) !important;\n  border: 1px solid rgba(255, 255, 255, 0.05) !important;\n  background: rgba(255, 255, 255, 0.05) !important;\n  backdrop-filter: blur(4px) !important;\n}\n\n.stat-container:hover {\n  background: rgba(255, 255, 255, 0.12) !important;\n  transform: translateY(-2px) !important;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.1) !important;\n}\n\n.stat-icon {\n  font-size: 20px;\n  line-height: 1;\n  margin-bottom: 3px;\n}\n\n.stat-value {\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1;\n}\n\n/* Change indicator */\n.change-indicator {\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  color: white;\n  font-size: 10px;\n  font-weight: 600;\n  padding: 2px 6px;\n  border-radius: 6px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  min-width: 24px;\n  text-align: center;\n  line-height: 1.2;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\n  animation: pulse 0.5s ease-in-out;\n}\n\n.change-indicator.positive {\n  background: rgba(46, 204, 113, 0.9) !important;\n}\n\n.change-indicator.negative {\n  background: rgba(231, 76, 60, 0.9) !important;\n}\n\n.change-indicator.negative-alt {\n  background: rgba(46, 204, 113, 0.9) !important;\n}\n\n@keyframes pulse {\n  0% { transform: scale(0.8); opacity: 0.7; }\n  50% { transform: scale(1.1); opacity: 1; }\n  100% { transform: scale(1); opacity: 1; }\n}\n\n/* No stats message */\n.no-stats {\n  text-align: center;\n  color: rgba(255, 255, 255, 0.5);\n  font-style: italic;\n  padding: 20px;\n}\n\n/* Thought label divider */\n.thought-label-divider {\n  position: absolute;\n  bottom: 52px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 80px;\n  height: 1px;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.6), transparent);\n  opacity: 0.6;\n}\n\n/* Thought bubble */\n.thought-bubble {\n  position: absolute;\n  left: 16px;\n  right: 16px;\n  bottom: 16px;\n  min-height: 60px;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px 16px;\n  background: rgba(0, 0, 0, 0.2) !important;\n  border: 1px solid rgba(255, 255, 255, 0.08) !important;\n  backdrop-filter: blur(8px) !important;\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.05) !important;\n}\n\n.thought-label {\n  position: absolute;\n  top: -24px;\n  left: 0;\n  font-size: 11px;\n  font-weight: 500;\n  color: rgba(255, 255, 255, 0.7);\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n  letter-spacing: 0.25px;\n}\n\n/* Container for multiple cards */\n.sst-card-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  align-items: start;\n  width: 100%;\n}\n\n/* --- Media Queries --- */\n\n/* Mobile Styles */\n@media (max-width: 768px) {\n  .tracker-card {\n    width: 100%;\n    max-width: 100%;\n    min-height: 400px;\n  }\n  \n  .stat-icon { font-size: 20px !important; margin-bottom: 3px !important; }\n  .stat-value { font-size: 16px !important; }\n  .stat-container { min-height: 70px !important; padding: 6px 3px !important; }\n  .stat-title { font-size: 9px !important; }\n  \n  /* Adjust stats container position for mobile */\n  .stats-container {\n    top: 100px !important;\n    bottom: 110px !important;\n  }\n}\n\n/* Desktop Styles (2-column layout) */\n@media (min-width: 769px) {\n  .tracker-card {\n    flex: 1 1 calc(50% - 10px);\n    max-width: calc(50% - 10px);\n    min-width: 300px; /* Ensure cards don't get too small */\n    height: 400px;\n  }\n  \n  .stat-icon { font-size: 28px !important; margin-bottom: 6px !important; }\n  .stat-value { font-size: 20px !important; }\n  .stat-container { min-height: 90px !important; padding: 10px 6px !important; }\n  .stat-title { font-size: 10px !important; }\n  \n  /* Adjust stats container position for desktop */\n  .stats-container {\n    top: 110px !important;\n    bottom: 110px !important;\n  }\n}\n\n/* Large Screen Styles */\n@media (min-width: 1400px) {\n  .tracker-card {\n    flex: 1 1 600px;\n    max-width: 600px;\n    height: 400px;\n  }\n  \n  .stat-icon { font-size: 32px !important; margin-bottom: 8px !important; }\n  .stat-value { font-size: 24px !important; }\n  .stat-container { min-height: 100px !important; padding: 12px 8px !important; }\n  .stat-title { font-size: 11px !important; }\n  \n  /* Adjust stats container position for large screens */\n  .stats-container {\n    top: 110px !important;\n    bottom: 110px !important;\n  }\n}\n</style>\n\n<div class=\"sst-card-container\">\n  <div class=\"tracker-card {{#if stats.inactive}}inactive{{/if}}\" style=\"background: linear-gradient(145deg, {{bgColor}} 0%, {{darkerBgColor}} 50%, {{darkerBgColor}} 100%);\">\n    <div class=\"gradient-overlay\"></div>\n    \n    <!-- Combined Header Section -->\n    <div class=\"tracker-card-header\">\n      <!-- Date and Counters Row -->\n      <div class=\"header-row-top\">\n        <div class=\"header-badge\">{{currentDate}}</div>\n        <div style=\"display: flex; gap: 8px;\">\n          {{#if stats.days_since_first_meeting}}<div class=\"header-badge\">Day {{stats.days_since_first_meeting}}</div>{{/if}}\n          {{#if stats.preg}}<div class=\"header-badge\">ü§∞{{stats.days_preg}}d</div>{{/if}}\n        </div>\n      </div>\n      \n      <!-- Character Name and Icons Row -->\n      <div class=\"header-row-middle\">\n        <div class=\"character-name\">{{characterName}}</div>\n        <div class=\"icon-container\">\n          {{#if healthIcon}}<span>{{healthIcon}}</span>{{/if}}\n          {{#if stats.inactive}}\n            {{#if (eq stats.inactiveReason 1)}}<span>üò¥</span>{{/if}}\n            {{#if (eq stats.inactiveReason 2)}}<span>üè•</span>{{/if}}\n            {{#if (eq stats.inactiveReason 3)}}<span>üò°</span>{{/if}}\n            {{#if (eq stats.inactiveReason 4)}}<span>ü´†</span>{{/if}}\n            {{#if (eq stats.inactiveReason 5)}}<span>ü™¶</span>{{/if}}\n          {{/if}}\n          <span>{{reactionEmoji}}</span>\n        </div>\n      </div>\n      \n      <!-- Character Status Row -->\n      <div class=\"header-row-bottom\">\n        <div class=\"character-status\">\n          {{#if stats.relationshipStatus}}<span>{{stats.relationshipStatus}}</span>{{/if}}\n          {{#if stats.desireStatus}}<span class=\"status-divider\">|</span><span>{{stats.desireStatus}}</span>{{/if}}\n        </div>\n      </div>\n    </div>\n    \n    <!-- Dynamic Stats Section -->\n    <div class=\"stats-container\">\n      {{{dynamicStatsHtml}}}\n    </div>\n    \n    <!-- Thought Bubble Section -->\n    {{#if showThoughtBubble}}\n    <div class=\"thought-label-divider\"></div>\n    <div class=\"thought-bubble\">\n      <div class=\"thought-label\">{{characterName}} thinks:</div>\n      <div style=\"font-size: 22px; flex-shrink: 0;\">üí≠</div>\n      <div style=\"flex: 1; font-size: 13px; font-weight: 400; line-height: 1.4; overflow: hidden;\">{{stats.internal_thought}}</div>\n    </div>\n    {{/if}}\n  </div>\n</div>\n<!-- CARD_TEMPLATE_END -->\n\n<!-- \nTEMPLATE VARIABLES:\n- {{characterName}}: Character's name\n- {{currentDate}}: Current date in YYYY-MM-DD format\n- {{bgColor}}: Primary background color\n- {{darkerBgColor}}: Darker variant of background color\n- {{contrastColor}}: Contrast color for text against background\n- {{stats.*}}: All stats from the JSON block (dynamically determined)\n- {{stats.internal_thought}}: Character's internal thoughts\n- {{stats.relationshipStatus}}: Relationship status text\n- {{stats.desireStatus}}: Desire status text\n- {{stats.inactive}}: Boolean for inactive status\n- {{stats.inactiveReason}}: Number indicating reason for inactivity (0-5)\n- {{healthIcon}}: Health status icon (ü§ï or üíÄ)\n- {{reactionEmoji}}: Reaction emoji (üëç, üëé, or üòê)\n- {{showThoughtBubble}}: Boolean to show/hide thought bubble\n- {{dynamicFields}}: Array of field objects with display information\n- {{dynamicStatsHtml}}: Pre-generated HTML for dynamic stats display\n-->",
  "sysPrompt": "## DYNAMIC DATING SIM MODE ENABLED\r\n\r\nYour objective: Prioritize narrative reality for relationship\\/status updates. Analyze chat context to determine current date (YYYY-MM-DD format) and time (24-hour time). Update all trackers instantly when events occur. ALWAYS check for `sim` codeblocks containing JSON. Ensure ALL necessary data is recalculated if missing.\r\n\r\nWhen using the MACRO position for templates, you can place the {{sim_tracker_positioned}} macro anywhere in your response to control exactly where the tracker appears.\r\n\r\n## Core Systems:\r\n\r\n### Key Rules:\r\n\r\n1. **Output Order**:\r\n\r\n   - ALWAYS generate narrative content first\r\n   - ONLY AFTER narrative content, output tracker block\r\n   - FINALLY output sim codeblock\r\n\r\n2. **Dynamic Field Support**:\r\n\r\n- Fields displayed are determined by what's present in the JSON block\r\n- Any numeric field can be displayed as a stat with appropriate icons\r\n- Change tracking works for any field with a corresponding \"fieldChange\" entry\r\n- Field names are automatically converted to display names (e.g., \"ap\" ‚Üí \"AFFECTION\")\r\n- Icons are automatically assigned based on field names and types\r\n\r\n3. **Multi-Character Support**:\r\n\r\n   - Generate ONE card per active character\r\n   - Track relationships separately for each character\r\n   - Maintain independent status for each character\r\n\r\n4. **Date System**:\r\n\r\n- **Inference**: Analyze narrative context to determine current date\r\n- **Format**: Store as YYYY-MM-DD in sim block (e.g., 2025-08-10)\r\n- **Progression**:\r\n  - Advance date when narrative time passes\r\n  - Handle month\\/year rollovers automatically\r\n  - Track conception days relative to conception date\r\n- **Display**: Show in ISO format at top of card\r\n- **Day Tracking**: Confirm the amount of days that have passed since the first meeting of the character.\r\n- **Time Tracking**: Confirm the time of day of the interaction, and present it as the story progresses realistically.\r\n\r\n5. **Status Trackers**:\r\n\r\n   - Health Status: `0`=Unharmed, `1`=Injured, `2`=Critical\r\n     - If character is left without treatment for grave, critical wounds: FORCE character to be inactive and do not continue roleplay or create dialog, as they are now dead.\r\n   - Reaction to User: `0`=Neutral, `1`=Like, `2`=Dislike\r\n   - Pregnancy: Track conception days when relevant (ü§∞[days]d)\r\n   - Internal Thought: Character's current internal thoughts\\/feelings\r\n   - Inactivity:\r\n     - If character is inactive (`true`), list the REASON why via a number.\r\n     - `0`: Not inactive (irrelevant if inactive is `false`)\r\n     - `1`: Asleep (üò¥)\r\n     - `2`: Comatose (üè•)\r\n     - `3`: Contempt\\/anger level forced character to leave (üò°)\r\n     - `4`: Incapacitated (ü´†)\r\n     - `5`: Death (ü™¶)\r\n\r\n6. **Change Tracking**:\r\n   - **ANY_FIELD_Change**: Numerical change in any field from user's action (positive\\/negative\\/zero)\r\n   - If no change occurred in a stat, set the change value to 0 or omit it\r\n   - These values represent the immediate impact of the user's most recent action\r\n   - Works with any field name (e.g., \"strength\", \"mood\", \"energy\", etc.)\r\n\r\n### Other Tracking Elements:\r\n\r\n- **Day Counter**: Track narrative days (starts at 1)\r\n- **Reaction**: üëç (Liked), üëé (Disliked), üòê (Neutral)\r\n- **BG Color**: Set hex color based on {{char}}'s appearance\\/personality\r\n\r\n### Output Workflow:\r\n\r\n1. Process narrative events\r\n2. Calculate status changes for ALL active characters\r\n3. Output narrative content\r\n4. Output ONLY the sim codeblock (no HTML)\r\n\r\nOutput the sim codeblock with all character data:\r\n\r\n{{sim_format}}\r\n\r\n## Critical Enforcement:\r\n\r\n1. **Dynamic Field Definition**:\r\n\r\n   - **Any Field**: Any numeric field in the JSON will be displayed as a stat\r\n   - **Change Tracking**: Add \"fieldNameChange\" for any field that changed\r\n   - **Custom Fields**: Feel free to add new fields as the story develops (e.g., \"energy\", \"stress\", \"mood\", \"skill_level\", etc.)\r\n   - **Flexible Icons**: Icons are automatically assigned based on field names and patterns\r\n\r\n2. **Position Lock**:\r\n\r\n   - Narrative content MUST come FIRST\r\n   - Tracker cards MUST come AFTER narrative\r\n   - Sim codeblock MUST be LAST OUTPUT\r\n   - NEVER exclude the sim codeblock from ANY character response. It must always be included.\r\n\r\n3. **Multi-Character Handling**:\r\n\r\n   - Generate cards for ALL ACTIVE characters\r\n   - Maintain separate state per character\r\n   - Process interactions individually\r\n\r\n4. **Game Master Role**:\r\n\r\n   - Only story characters receive trackers, no other assistants\r\n\r\n5. **Performance Notes**:\r\n\r\n   - Limit to 4 active characters maximum at a time\r\n   - Collapse inactive character cards\r\n   - Preserve state for all known characters\r\n   - Previous tracker blocks are only to be used as references\r\n   - ALWAYS generate fresh tracker data for each message\r\n\r\n6. **Data Correction**:\r\n   - If ANY data is missing from the previous sim tracker block, add the missing data and continue your assessment.\r\n   - Do not leave any relevant data empty or unavailable. The JSON block, its presence at the end of the message, and its complete formatting is mission critical.\r\n   - If data from previous run does not match expected formatting, or contains missing keys, perform self-correction of the data and present the new code block at the end of the message.",
  "customFields": [
    {
      "key": "DYNAMIC",
      "description": "Fields are dynamically determined from JSON content"
    }
  ]
}